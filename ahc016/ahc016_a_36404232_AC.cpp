/*
 * Author: through
 * Submission URL: https://atcoder.jp/contests/ahc016/submissions/36404232
 * Submitted at: 2022-11-12 19:58:53
 * Problem URL: https://atcoder.jp/contests/ahc016/tasks/ahc016_a
 * Result: AC
 * Execution Time: 42 ms
 */

#include <bits/stdc++.h>
using namespace std;
#if __has_include(<atcoder/all>)
    #include <atcoder/all>
using namespace atcoder;
#endif
typedef long long ll;
typedef pair<int, int> P;
typedef tuple<int, int, int, int> T;
#define rep(i, n) for(int i = 0; i < n; i++)

namespace utility {
    struct timer {
        chrono::system_clock::time_point start;
        // 開始時間を記録
        void CodeStart() {
            start = chrono::system_clock::now();
        }
        // 経過時間 (s) を返す
        double elapsed() const {
        using namespace std::chrono;
            return (double)duration_cast<milliseconds>(system_clock::now() - start).count();
        }
    } mytm;
}

inline unsigned int rand_int() {
    static unsigned int tx = 123456789, ty=362436069, tz=521288629, tw=88675123;
    unsigned int tt = (tx^(tx<<11));
    tx = ty; ty = tz; tz = tw;
    return ( tw=(tw^(tw>>19))^(tt^(tt>>8)) );
}

inline double rand_double() {
    return (double)(rand_int()%(int)1e9)/1e9;
}

//温度関数
#define TIME_LIMIT 2950
inline double temp(int start) {
    double start_temp = 100,end_temp = 1;
    return start_temp + (end_temp-start_temp)*((utility::mytm.elapsed()-start)/TIME_LIMIT);
}

//焼きなましの採用確率
inline double prob(int now,int next,int start) {
    return exp((double)(next - now) / temp(start));
}

//-----------------以下から実装部分-----------------//

// ε = 0の時の理論値
// m<=12:n=4,  m<=31:n=5,  m<=102:n=6
vector<vector<string>> theoretical_value_string = {
    {},
    {},
    {},
    {},
    {"000000","100000","110000","111000","110100","001100","101100","111100","011110","111110","111111",},
    {"0000000000","1000000000","1100000000","1110000000","1111000000","1100100000","0010100000","1010100000","1110100000","0011100000","1011100000","1111100000","0110110000","1110110000","0101110000","1101110000","0111110000","1111110000","0111111000","1111111000","1110110100","1101110100","1111110100","1111001100","0011101100","1111101100","0111111100","1111111100","1111011110","1111111110","1111111111",},
    {"000000000000000","100000000000000","110000000000000","111000000000000","111100000000000","111110000000000","110001000000000","001001000000000","101001000000000","111001000000000","001101000000000","101101000000000","111101000000000","001111000000000","101111000000000","111111000000000","011001100000000","111001100000000","010101100000000","110101100000000","011101100000000","111101100000000","000111100000000","100111100000000","010111100000000","110111100000000","011111100000000","111111100000000","011101110000000","111101110000000","011011110000000","111011110000000","011111110000000","111111110000000","011111111000000","111111111000000","111001100100000","110101100100000","111101100100000","000111100100000","110111100100000","111111100100000","111100010100000","000010010100000","111110010100000","001101010100000","111101010100000","110011010100000","001111010100000","111111010100000","011101110100000","111101110100000","011011110100000","111011110100000","010111110100000","110111110100000","011111110100000","111111110100000","011110011100000","111110011100000","001111011100000","011111011100000","111111011100000","011111111100000","111111111100000","111100110110000","111110110110000","111101110110000","111011110110000","001111110110000","101111110110000","111111110110000","000110101110000","111110101110000","110111101110000","001111101110000","111111101110000","011110111110000","111110111110000","011111111110000","111111111110000","001110111111000","101110111111000","111110111111000","111111111111000","111101110110100","111011110110100","111111110110100","111011101110100","111111101110100","011111111110100","111111111110100","111111111001100","111110011101100","011111111101100","111111111101100","111110111111100","111111111111100","011111111011110","111111111011110","111111111111110","111111111111111",},
};
vector<vector<vector<int>>> theoretical_value_dig = {
    {},
    {},
    {},
    {},
    {{0,0,0,0},{0,0,1,1},{0,1,1,2},{1,1,1,3},{0,2,2,2},{1,1,1,1},{1,1,2,2},{1,2,2,3},{2,2,2,2},{2,2,3,3},{3,3,3,3},},
    {{0,0,0,0,0},{0,0,0,1,1},{0,0,1,1,2},{0,1,1,1,3},{1,1,1,1,4},{0,0,2,2,2},{0,1,1,1,1},{0,1,1,2,2},{0,1,2,2,3},{1,1,1,1,2},{1,1,1,2,3},{1,1,2,2,4},{0,2,2,2,2},{0,2,2,3,3},{1,1,2,2,2},{1,1,2,3,3},{1,2,2,2,3},{1,2,2,3,4},{2,2,2,3,3},{2,2,2,4,4},{0,3,3,3,3},{1,2,3,3,3},{1,3,3,3,4},{2,2,2,2,4},{2,2,2,2,2},{2,2,3,3,4},{2,3,3,3,3},{2,3,3,4,4},{3,3,3,3,4},{3,3,4,4,4},{4,4,4,4,4},},
    {{0,0,0,0,0,0},{0,0,0,0,1,1},{0,0,0,1,1,2},{0,0,1,1,1,3},{0,1,1,1,1,4},{1,1,1,1,1,5},{0,0,0,2,2,2},{0,0,1,1,1,1},{0,0,1,1,2,2},{0,0,1,2,2,3},{0,1,1,1,1,2},{0,1,1,1,2,3},{0,1,1,2,2,4},{1,1,1,1,1,3},{1,1,1,1,2,4},{1,1,1,2,2,5},{0,0,2,2,2,2},{0,0,2,2,3,3},{0,1,1,2,2,2},{0,1,1,2,3,3},{0,1,2,2,2,3},{0,1,2,2,3,4},{1,1,1,1,2,2},{1,1,1,1,3,3},{1,1,1,2,2,3},{1,1,1,2,3,4},{1,1,2,2,2,4},{1,1,2,2,3,5},{0,2,2,2,3,3},{0,2,2,2,4,4},{1,1,2,2,3,3},{1,1,2,2,4,4},{1,2,2,2,3,4},{1,2,2,2,4,5},{2,2,2,2,4,4},{2,2,2,2,5,5},{0,0,3,3,3,3},{0,1,2,3,3,3},{0,1,3,3,3,4},{1,1,2,2,2,2},{1,1,2,3,3,4},{1,1,3,3,3,5},{0,2,2,2,2,4},{1,1,1,1,1,1},{1,2,2,2,2,5},{0,2,2,2,2,2},{0,2,2,3,3,4},{1,1,1,3,3,3},{1,2,2,2,2,3},{1,2,2,3,3,5},{0,2,3,3,3,3},{0,2,3,3,4,4},{1,1,3,3,3,3},{1,1,3,3,4,4},{1,2,2,3,3,3},{1,2,2,3,4,4},{1,2,3,3,3,4},{1,2,3,3,4,5},{2,2,2,2,2,4},{2,2,2,2,3,5},{2,2,2,2,3,3},{2,2,2,3,3,4},{2,2,2,3,4,5},{2,2,3,3,4,4},{2,2,3,3,5,5},{0,3,3,3,3,4},{1,3,3,3,3,5},{0,3,3,4,4,4},{1,2,3,4,4,4},{1,3,3,3,3,3},{1,3,3,3,4,4},{1,3,3,4,4,5},{2,2,2,2,2,2},{2,2,3,3,3,5},{2,2,2,4,4,4},{2,2,3,3,3,3},{2,2,3,4,4,5},{2,3,3,3,3,4},{2,3,3,3,4,5},{2,3,3,4,4,4},{2,3,3,4,5,5},{3,3,3,3,3,3},{3,3,3,3,4,4},{3,3,3,4,4,5},{3,3,3,5,5,5},{0,4,4,4,4,4},{1,3,4,4,4,4},{1,4,4,4,4,5},{2,2,4,4,4,4},{2,3,4,4,4,5},{2,4,4,4,4,4},{2,4,4,4,5,5},{3,3,3,3,5,5},{3,3,3,3,3,5},{3,3,4,4,4,4},{3,3,4,4,5,5},{3,4,4,4,4,5},{3,4,4,5,5,5},{4,4,4,4,4,4},{4,4,4,4,5,5},{4,4,5,5,5,5},{5,5,5,5,5,5},},
};

constexpr int test = 100;


struct State{
    // State内で用いる変数等の定義
    int n;
    string graph;
    vector<int> dig;

    State(int num,int z,int m,double err){
        n = z;
        graph = "";
        dig.assign(n,0);
        queue<char> q;

        if(err <= 0.05)return;
        
        rep(i,n){
            for(int j=i+1;j<n;j++){
                if(i <= num && j <= num){
                    graph.push_back('1');
                    dig[i]++;
                    dig[j]++;
                }
                else graph.push_back('0');
            }
        }
    }

    ll calcScore(const vector<int> &d){
        double score = 0;
        vector<int> td1 = dig,td2 = d;
        sort(td1.begin(),td1.end());
        sort(td2.begin(),td2.end());

        rep(i,n)score -= (td1[i]-td2[i])*(td1[i]-td2[i])*(td1[i]-td2[i])*(td1[i]-td2[i]);
        return score;
    }
};

struct Solver{
    // Solve内で用いる変数等の定義
    int m,n;
    double err;
    vector<State> state;

    Solver(){
        n = 6;
    }

    void input(){
        cin >> m >> err;

        // err == 0.00は理論値あり。
        if(err <= 0.05){
            if(m <= 31)n = 5;
            if(m <= 12)n = 4;
            return;
        }
        else n = m;

        rep(i,m)state.emplace_back(State(i,n,m,err));
    }

    void output(){
        cout << n << '\n' << flush;
        rep(i,m)cout << (err <= 0.05 ? theoretical_value_string[n][i] : state[i].graph) << '\n' << flush;
    }

    void solve(){
        rep(i,test){
            string t; cin >> t;

            vector<int> dig(n,0);
            int now = 0;
            rep(j,n){
                for(int k=j+1;k<n;k++){
                    if(t[now+k-(j+1)] == '1'){
                        dig[j]++;
                        dig[k]++;
                    }
                }
                now += n-(j+1);
            }

            // err <= 0.05 の例外
            if(err <= 0.05){
                sort(dig.begin(),dig.end());
                bool f = true;
                rep(j,m){
                    if(dig == theoretical_value_dig[n][j]){
                        cout << j << '\n' << flush;
                        f = false;
                        break;
                    } 
                }
                if(f)cout << rand_int()%m << '\n' << flush;   
                continue;
            }

            int ans = 0;
            ll md = -INT_MAX;
            rep(j,m){
                ll score = state[j].calcScore(dig);
                if(score > md){
                    md = score;
                    ans = j;
                    // cout << j << " " << md << endl;
                }
            }
            cout << ans << '\n';
            cout << flush;
        }
    }
};

int main(){
    cin.tie(0);
    ios_base::sync_with_stdio(false);

    // NとM個のグラフ出力part
    Solver solver;
    solver.input();
    solver.output();

    // 正しいグラフに読み直しpart
    solver.solve();
    
    return 0;
}